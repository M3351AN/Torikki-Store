let callbackCounter=0;function getUniqueCallbackName(e){return`${e}_callback_${Date.now()}_`+callbackCounter++}function exec(e,n){return void 0===n&&(n={}),new Promise((i,t)=>{let r=getUniqueCallbackName("exec");function o(e){delete window[e]}window[r]=(e,t,n)=>{i({errno:e,stdout:t,stderr:n}),o(r)};try{ksu.exec(e,JSON.stringify(n),r)}catch(e){t(e),o(r)}})}function Stdio(){this.listeners={}}function ChildProcess(){this.listeners={},this.stdin=new Stdio,this.stdout=new Stdio,this.stderr=new Stdio}function spawn(e,t,n){void 0===t?t=[]:"object"==typeof t&&(n=t),void 0===n&&(n={});var i=new ChildProcess;let r=getUniqueCallbackName("spawn");function o(e){delete window[e]}(window[r]=i).on("exit",e=>{o(r)});try{ksu.spawn(e,JSON.stringify(t),JSON.stringify(n),r)}catch(e){i.emit("error",e),o(r)}return i}function fullScreen(e){ksu.fullScreen(e)}function toast(e){ksu.toast(e)}function readFile(e){return exec("cat "+e).then(e=>{if(0===e.errno)return e.stdout;throw new Error("Error reading file: "+e.stderr)})}function writeFile(e,t){return exec(`echo "${t.replace(/\n/g,"\\n")}" > `+e).then(e=>{if(0!==e.errno)throw new Error("Error writing file: "+e.stderr)})}function moduleInfo(){return new Promise((t,n)=>{let i=getUniqueCallbackName("moduleInfo");function r(e){delete window[e]}window[i]=e=>{t(e),r(i)};try{ksu.moduleInfo(i)}catch(e){n(e),r(i)}})}Stdio.prototype.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},Stdio.prototype.emit=function(e,...t){this.listeners[e]&&this.listeners[e].forEach(e=>e(...t))},ChildProcess.prototype.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},ChildProcess.prototype.emit=function(e,...t){this.listeners[e]&&this.listeners[e].forEach(e=>e(...t))};export{exec,spawn,fullScreen,toast,readFile,writeFile,moduleInfo};